<?php
// trim - Удаляет пробелы (или другие символы) из начала и конца строки и возвращает его
/* По умолчание удаляет 
    " "   обычный пробел.
    "\t"  символ табуляции.
    "\n"  символ перевода строки.
    "\r"  символ возврата каретки.
    "\0"  NUL-байт.
    "\v"  вертикальная табуляция.
    */

    //ltrim - сначала
    //rtrim - с конца

    $str = "Hello man..";
$result = rtrim($str,".");

// strip_tags - удаление html тегов
$str1 = "[b]Strong[/b], [i]Force[/i]";
$result1 = strip_tags($str1,["[b]"]); // вторым значением указываем то что не будем удалять(тут ввиде массива)
// htmlspecialchars - заменяет html теги на аналоги символа(пример: текст) 
//  используется для защиты от xss атак(пример: похищение данных куки)

// htmlspecialchars_decode - работает наоборот
// htmlentities - аналог функции htmlspecialchars за исключением того что она будет пытаться преобразовывать всё для чего есть сущности

// str_replace - находит  что-то и заменяет(регистрозависима)
// str_ireplace - не регистро зависима
$str2 = "[b]Strong[/b], [i]Force[/i]";
//$result1 = str_replace("[b]","<b>", $str1);
//$result1 = str_replace("[/b]","</b>", $result1);
// более сокращённый вариант с использованием массива
$bb_code = ["[b]","[/b]","[i]","[/i]"];
$html_code= ["<b>","</b>","<i>","</i>"];
$result2 = str_replace($bb_code,$html_code,$str2);

// strtoupper - преобразует все символы в большие
// strtolower - в маленькие 
// strlen - возвращает кол-во байт в строке
// mb_strlen - возвращает кол-во символов (так же можно указать кодировку вторым значением, пример: utf-8

// strpos - смотрит присутствует ли это значение и на какой оно позиции(если это слово то наход где оно начинается), 1 пар где, 2 что ищем 
// mb_strpos - тоже самое но используется для керилицы(можно всегда использовать и будет нормально воспринимать два типа)  

$message = "Hello";
$result3 = strpos ($message, "H");
if ($result3 !== false) { //указываем не равняется ли ложью так как позицию 0 воспринимается как false хотя по факту это true
    echo "есть такое на позиции" . $result3;
} else {
    echo "нету";
}

// substr - узнаём что находится на этой позиции так же можно указывать отрицательное значение и он будет считать с конца
//(если на этой позиции начинается слово то оно его покажет потому что с этой позици он не берёт остаток строки) 
// если указать 3 параметром(1) то укажет только 1 букву

// функции для работы с датой и временем

// date - вернёт текущее время на сервере
echo "<br>";
echo date("Y-m-d H:i:s"); // тут для примера американский формат(- и : просто символы для разделения чтоб было проще понять)

// time - возвращает кол-во секунд соответствующее времени и дате(называется timestamp)
// за счёт того что мы будем хранить инфу в сек мы сможем свободно её переводить в любой формат
echo "<br>";
echo date("Y-m-d H:i:s", time() - 60*60*24*3); // откатил время на 3 дня))
echo "<br>";
echo date_default_timezone_get();
echo "<br>";
date_default_timezone_set("Europe/Moscow"); // указали время как в москве
date_default_timezone_get(); // указывает текущий тип времени
echo date("Y-m-d H:i:s", time());

// phpinfo() - функция которая выводит все настройки интерпритатора php

// microtime() аналог time но выводит ещё и микросекунды(можно использовать для отображения затрачеваемого времени на выполнение какого-то кода) 
//Пример
/*
$start = microtime(true); по умолчанию возвращает строку по этому указываем true
КАКОЙ-ТО КОД
$end = microtime(true);
echo $end - $start;
*/